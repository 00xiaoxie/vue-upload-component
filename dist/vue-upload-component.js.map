{"version":3,"file":"vue-upload-component.js","sources":["../src/utils/request.js","../src/chunk/ChunkUploadHandler.js","../src/InputFile.vue","../src/FileUpload.vue","../src/index.js"],"sourcesContent":["/**\n * Creates a XHR request\n *\n * @param {Object} options\n */\nexport const createRequest = (options) => {\n  const xhr = new XMLHttpRequest()\n  xhr.responseType = 'json'\n  xhr.open(options.method || 'GET', options.url)\n  if (options.headers) {\n    Object.keys(options.headers).forEach(key => {\n      xhr.setRequestHeader(key, options.headers[key])\n    })\n  }\n\n  return xhr\n}\n\n/**\n * Sends a XHR request with certain body\n *\n * @param {XMLHttpRequest} xhr\n * @param {Object} body\n */\nexport const sendRequest = (xhr, body) => {\n  return new Promise((resolve, reject) => {\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.response)\n      } else {\n        reject(xhr.statusText)\n      }\n    }\n    xhr.onerror = () => reject(xhr.statusText)\n    xhr.send(JSON.stringify(body))\n  })\n}\n\n/**\n * Creates and sends XHR request\n *\n * @param {Object} options\n *\n * @returns Promise\n */\nexport default function (options) {\n  const xhr = createRequest(options)\n\n  return sendRequest(xhr, options.body)\n}\n","import { default as request, createRequest, sendRequest } from '../utils/request'\n\nexport default class ChunkUploadHandler {\n  /**\n   * Constructor\n   *\n   * @param {File} file\n   * @param {Object} options\n   */\n  constructor (file, options) {\n    this.file = file\n    this.options = options\n  }\n\n  /**\n   * Gets the max retries from options\n   */\n  get maxRetries () {\n    return parseInt(this.options.maxRetries)\n  }\n\n  /**\n   * Gets the max number of active chunks being uploaded at once from options\n   */\n  get maxActiveChunks () {\n    return parseInt(this.options.maxActive)\n  }\n\n  /**\n   * Gets the file type\n   */\n  get fileType () {\n    return this.file.type\n  }\n\n  /**\n   * Gets the file size\n   */\n  get fileSize () {\n    return this.file.size\n  }\n\n  /**\n   * Gets action (url) to upload the file\n   */\n  get action () {\n    return this.options.action || null\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in start phase\n   */\n  get startBody () {\n    return this.options.startBody || {}\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in upload phase\n   */\n  get uploadBody () {\n    return this.options.uploadBody || {}\n  }\n\n  /**\n   * Gets the body to be merged when sending the request in finish phase\n   */\n  get finishBody () {\n    return this.options.finishBody || {}\n  }\n\n  /**\n   * Gets the headers of the requests from options\n   */\n  get headers () {\n    return this.options.headers || {}\n  }\n\n  /**\n   * Whether it's ready to upload files or not\n   */\n  get readyToUpload () {\n    return !!this.chunks\n  }\n\n  /**\n   * Gets the progress of the chunk upload\n   * - Gets all the completed chunks\n   * - Gets the progress of all the chunks that are being uploaded\n   */\n  get progress () {\n    const completedProgress = (this.chunksUploaded.length / this.chunks.length) * 100\n    const uploadingProgress = this.chunksUploading.reduce((progress, chunk) => {\n      return progress + ((chunk.progress | 0) / this.chunks.length)\n    }, 0)\n\n    return Math.min(completedProgress + uploadingProgress, 100)\n  }\n\n  /**\n   * Gets all the chunks that are pending to be uploaded\n   */\n  get chunksToUpload () {\n    return this.chunks.filter(chunk => {\n      return !chunk.active && !chunk.uploaded\n    })\n  }\n\n  /**\n   * Whether there are chunks to upload or not\n   */\n  get hasChunksToUpload () {\n    return this.chunksToUpload.length > 0\n  }\n\n  /**\n   * Gets all the chunks that are uploading\n   */\n  get chunksUploading () {\n    return this.chunks.filter(chunk => {\n      return !!chunk.xhr && !!chunk.active\n    })\n  }\n\n  /**\n   * Gets all the chunks that have finished uploading\n   */\n  get chunksUploaded () {\n    return this.chunks.filter(chunk => {\n      return !!chunk.uploaded\n    })\n  }\n\n  /**\n   * Creates all the chunks in the initial state\n   */\n  createChunks () {\n    this.chunks = []\n\n    let start = 0\n    let end = this.chunkSize\n    while (start < this.fileSize) {\n      this.chunks.push({\n        blob: this.file.file.slice(start, end),\n        startOffset: start,\n        active: false,\n        retries: this.maxRetries\n      })\n      start = end\n      end = start + this.chunkSize\n    }\n  }\n\n  /**\n   * Updates the progress of the file with the handler's progress\n   */\n  updateFileProgress () {\n    this.file.progress = this.progress\n  }\n\n  /**\n   * Paues the upload process\n   * - Stops all active requests\n   * - Sets the file not active\n   */\n  pause () {\n    this.file.active = false\n    this.chunksUploading.forEach(chunk => {\n      chunk.xhr.abort()\n      chunk.active = false\n    })\n  }\n\n  /**\n   * Resumes the file upload\n   * - Sets the file active\n   * - Starts the following chunks\n   */\n  resume () {\n    this.file.active = true\n    this.startChunking()\n  }\n\n  /**\n   * Starts the file upload\n   *\n   * @returns Promise\n   * - resolve  The file was uploaded\n   * - reject   The file upload failed\n   */\n  upload () {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve\n      this.reject = reject\n    })\n    this.start()\n\n    return this.promise\n  }\n\n  /**\n   * Start phase\n   * Sends a request to the backend to initialise the chunks\n   */\n  start () {\n    request({\n      method: 'POST',\n      headers: this.headers,\n      url: this.action,\n      body: Object.assign(this.startBody, {\n        phase: 'start',\n        mime_type: this.fileType,\n        size: this.fileSize\n      })\n    }).then(res => {\n      if (res.status !== 'success') {\n        return this.reject(res.message)\n      }\n\n      this.sessionId = res.data.session_id\n      this.chunkSize = res.data.end_offset\n\n      this.createChunks()\n      this.startChunking()\n    }).catch(error => this.reject(error))\n  }\n\n  /**\n   * Starts to upload chunks\n   */\n  startChunking () {\n    for (let i = 0; i < this.maxActiveChunks; i++) {\n      this.uploadNextChunk()\n    }\n  }\n\n  /**\n   * Uploads the next chunk\n   * - Won't do anything if the process is paused\n   * - Will start finish phase if there are no more chunks to upload\n   */\n  uploadNextChunk () {\n    if (this.file.active) {\n      if (this.hasChunksToUpload) {\n        return this.uploadChunk(this.chunksToUpload[0])\n      }\n\n      if (this.chunksUploading.length === 0) {\n        return this.finish()\n      }\n    }\n  }\n\n  /**\n   * Uploads a chunk\n   * - Sends the chunk to the backend\n   * - Sets the chunk as uploaded if everything went well\n   * - Decreases the number of retries if anything went wrong\n   * - Fails if there are no more retries\n   *\n   * @param {Object} chunk\n   */\n  uploadChunk (chunk) {\n    chunk.progress = 0\n    chunk.active = true\n    this.updateFileProgress()\n    chunk.xhr = createRequest({\n      method: 'POST',\n      headers: this.headers,\n      url: this.action\n    })\n\n    chunk.xhr.upload.addEventListener('progress', function(evt) {\n      if (evt.lengthComputable) {\n        chunk.progress = Math.round(evt.loaded / evt.total * 100)\n      }\n    }, false)\n\n    sendRequest(chunk.xhr, Object.assign(this.uploadBody, {\n      phase: 'upload',\n      session_id: this.sessionId,\n      start_offset: chunk.startOffset,\n      chunk: chunk.blob\n    })).then(res => {\n      chunk.active = false\n      if (res.status === 'success') {\n        chunk.uploaded = true\n      } else {\n        if (chunk.retries-- <= 0) {\n          this.pause()\n          return this.reject('File upload failed')\n        }\n      }\n\n      this.uploadNextChunk()\n    }).catch(() => {\n      chunk.active = false\n      if (chunk.retries-- <= 0) {\n        this.pause()\n        return this.reject('File upload failed')\n      }\n\n      this.uploadNextChunk()\n    })\n  }\n\n  /**\n   * Finish phase\n   * Sends a request to the backend to finish the process\n   */\n  finish () {\n    this.updateFileProgress()\n\n    request({\n      method: 'POST',\n      headers: this.headers,\n      url: this.action,\n      body: Object.assign(this.finishBody, {\n        phase: 'finish',\n        session_id: this.sessionId\n      })\n    }).then(res => {\n      if (res.status !== 'success') {\n        return this.reject(res.message)\n      }\n\n      this.resolve(res)\n    }).catch(error => this.reject(error))\n  }\n}\n","<template>\n  <input\n    type=\"file\"\n    :name=\"$parent.name\"\n    :id=\"$parent.inputId || $parent.name\"\n    :accept=\"$parent.accept\"\n    @change=\"change\"\n    :webkitdirectory=\"$parent.directory && $parent.features.directory\"\n    :directory=\"$parent.directory && $parent.features.directory\"\n    :multiple=\"$parent.multiple && $parent.features.html5\"\n  />\n</template>\n<script>\nexport default {\n  methods: {\n    change(e) {\n      this.$destroy()\n      this.$parent.addInputFile(e.target)\n      // eslint-disable-next-line\n      new this.constructor({\n        parent: this.$parent,\n        el: this.$el,\n      })\n    }\n  }\n}\n</script>\n","<template>\n  <label :class=\"className\">\n    <slot></slot>\n    <input-file></input-file>\n  </label>\n</template>\n<style>\n.file-uploads {\n  overflow: hidden;\n  position: relative;\n  text-align: center;\n  display: inline-block;\n}\n.file-uploads.file-uploads-html4 input[type=\"file\"] {\n  opacity: 0;\n  font-size: 20em;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.file-uploads.file-uploads-html5 input[type=\"file\"] {\n  overflow: hidden;\n  position: fixed;\n  width: 1px;\n  height: 1px;\n  z-index: -1;\n  opacity: 0;\n}\n</style>\n<script>\nimport ChunkUploadDefaultHandler from './chunk/ChunkUploadHandler'\nimport InputFile from './InputFile.vue'\n\nconst CHUNK_DEFAULT_OPTIONS = {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  action: '',\n  minSize: 1048576,\n  maxActive: 3,\n  maxRetries: 5,\n\n  handler: ChunkUploadDefaultHandler\n}\n\nexport default {\n  components: {\n    InputFile,\n  },\n  props: {\n    inputId: {\n      type: String,\n    },\n\n    name: {\n      type: String,\n      default: 'file',\n    },\n\n    accept: {\n      type: String,\n    },\n\n    multiple: {\n      type: Boolean,\n    },\n\n    maximum: {\n      type: Number,\n      default() {\n        return this.multiple ? 0 : 1\n      }\n    },\n\n    addIndex: {\n      type: [Boolean, Number],\n    },\n\n    directory: {\n      type: Boolean,\n    },\n\n    postAction: {\n      type: String,\n    },\n\n    putAction: {\n      type: String,\n    },\n\n    headers: {\n      type: Object,\n      default: Object,\n    },\n\n    data: {\n      type: Object,\n      default: Object,\n    },\n\n    timeout: {\n      type: Number,\n      default: 0,\n    },\n\n\n    drop: {\n      default: false,\n    },\n\n    dropDirectory: {\n      type: Boolean,\n      default: true,\n    },\n\n    size: {\n      type: Number,\n      default: 0,\n    },\n\n    extensions: {\n      default: Array,\n    },\n\n\n    value: {\n      type: Array,\n      default: Array,\n    },\n\n    thread: {\n      type: Number,\n      default: 1,\n    },\n\n    // Chunk upload enabled\n    chunkEnabled: {\n      type: Boolean,\n      default: false\n    },\n\n    // Chunk upload properties\n    chunk: {\n      type: Object,\n      default: () => {\n        return CHUNK_DEFAULT_OPTIONS\n      }\n    }\n  },\n\n  data() {\n    return {\n      files: this.value,\n      features: {\n        html5: true,\n        directory: false,\n        drag: false,\n      },\n\n      active: false,\n      dropActive: false,\n\n      uploading: 0,\n\n      destroy: false,\n    }\n  },\n\n\n  /**\n   * mounted\n   * @return {[type]} [description]\n   */\n  mounted() {\n    let input = document.createElement('input')\n    input.type = 'file'\n    input.multiple = true\n\n    // html5 特征\n    if (window.FormData && input.files) {\n      // 上传目录特征\n      if (typeof input.webkitdirectory === 'boolean' || typeof input.directory === 'boolean') {\n        this.features.directory = true\n      }\n\n      // 拖拽特征\n      if (this.features.html5 && typeof input.ondrop !== 'undefined') {\n        this.features.drop = true\n      }\n    } else {\n      this.features.html5 = false\n    }\n\n    // files 定位缓存\n    this.maps = {}\n\n    this.$nextTick(function () {\n\n      // 更新下父级\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n\n      // 拖拽渲染\n      this.watchDrop(this.drop)\n    })\n  },\n\n  /**\n   * beforeDestroy\n   * @return {[type]} [description]\n   */\n  beforeDestroy() {\n    // 已销毁\n    this.destroy = true\n\n    // 设置成不激活\n    this.active = false\n  },\n\n  computed: {\n    /**\n     * uploading 正在上传的线程\n     * @return {[type]} [description]\n     */\n\n    /**\n     * uploaded 文件列表是否全部已上传\n     * @return {[type]} [description]\n     */\n    uploaded() {\n      let file\n      for (let i = 0; i < this.files.length; i++) {\n        file = this.files[i]\n        if (file.fileObject && !file.error && !file.success) {\n          return false\n        }\n      }\n      return true\n    },\n\n    chunkOptions () {\n      return Object.assign(CHUNK_DEFAULT_OPTIONS, this.chunk)\n    },\n\n    className() {\n      return [\n        'file-uploads',\n        this.features.html5 ? 'file-uploads-html5' : 'file-uploads-html4',\n        this.features.directory && this.directory ? 'file-uploads-directory' : undefined,\n        this.features.drop && this.drop ? 'file-uploads-drop' : undefined,\n      ]\n    }\n  },\n\n\n  watch: {\n    active(active) {\n      this.watchActive(active)\n    },\n\n    dropActive() {\n      if (this.$parent) {\n        this.$parent.$forceUpdate()\n      }\n    },\n\n    drop(value) {\n      this.watchDrop(value)\n    },\n\n    value(files) {\n      if (this.files === files) {\n        return\n      }\n      this.files = files\n\n      let oldMaps = this.maps\n\n      // 重写 maps 缓存\n      this.maps = {}\n      for (let i = 0; i < this.files.length; i++) {\n        let file = this.files[i]\n        this.maps[file.id] = file\n      }\n\n      // add, update\n      for (let key in this.maps) {\n        let newFile = this.maps[key]\n        let oldFile = oldMaps[key]\n        if (newFile !== oldFile) {\n          this.emitFile(newFile, oldFile)\n        }\n      }\n\n      // delete\n      for (let key in oldMaps) {\n        if (!this.maps[key]) {\n          this.emitFile(undefined, oldMaps[key])\n        }\n      }\n    },\n  },\n\n  methods: {\n\n    // 清空\n    clear() {\n      if (this.files.length) {\n        let files = this.files\n        this.files = []\n\n        // 定位\n        this.maps = {}\n\n        // 事件\n        this.emitInput()\n        for (let i = 0; i < files.length; i++) {\n          this.emitFile(undefined, files[i])\n        }\n      }\n      return true\n    },\n\n    // 选择\n    get(id) {\n      if (!id) {\n        return false\n      }\n\n      if (typeof id === 'object') {\n        return this.maps[id.id] || false\n      }\n\n      return this.maps[id] || false\n    },\n\n    // 添加\n    add(_files, index = this.addIndex) {\n      let files = _files\n      let isArray = files instanceof Array\n\n      // 不是数组整理成数组\n      if (!isArray) {\n        files = [files]\n      }\n\n      // 遍历规范对象\n      let addFiles = []\n      for (let i = 0; i < files.length; i++) {\n        let file = files[i]\n        if (this.features.html5 && file instanceof Blob) {\n          file = {\n            file,\n            size: file.size,\n            name: file.webkitRelativePath || file.relativePath || file.name || 'unknown',\n            type: file.type,\n          }\n        }\n        let fileObject = false\n        if (file.fileObject === false) {\n          // false\n        } else if (file.fileObject) {\n          fileObject = true\n        } else if (typeof Element !== 'undefined' && file.el instanceof Element) {\n          fileObject = true\n        } else if (typeof Blob !== 'undefined' && file.file instanceof Blob) {\n          fileObject = true\n        }\n        if (fileObject) {\n          file = {\n            fileObject: true,\n            size: -1,\n            name: 'Filename',\n            type: '',\n            active: false,\n            error: '',\n            success: false,\n            putAction: this.putAction,\n            postAction: this.postAction,\n            timeout: this.timeout,\n            ...file,\n            response: {},\n\n            progress: '0.00',          // 只读\n            speed: 0,                  // 只读\n            // xhr: false,                // 只读\n            // iframe: false,             // 只读\n          }\n\n          file.data = {\n            ...this.data,\n            ...file.data ? file.data : {},\n          }\n\n          file.headers = {\n            ...this.headers,\n            ...file.headers ? file.headers : {},\n          }\n        }\n\n        // 必须包含 id\n        if (!file.id) {\n          file.id = Math.random().toString(36).substr(2)\n        }\n\n        if (this.emitFilter(file, undefined)) {\n          continue\n        }\n\n        // 最大数量限制\n        if (this.maximum > 1 && (addFiles.length + this.files.length) >= this.maximum) {\n          break\n        }\n\n        addFiles.push(file)\n\n        // 最大数量限制\n        if (this.maximum === 1) {\n          break\n        }\n      }\n\n      // 没有文件\n      if (!addFiles.length) {\n        return false\n      }\n\n      // 如果是 1 清空\n      if (this.maximum === 1) {\n        this.clear()\n      }\n\n\n      // 添加进去 files\n      let newFiles\n      if (index === true || index === 0) {\n        newFiles = addFiles.concat(this.files)\n      } else if (index) {\n        newFiles = addFiles.concat([])\n        newFiles.splice(index, 0, addFiles)\n      } else {\n        newFiles = this.files.concat(addFiles)\n      }\n\n      this.files = newFiles\n\n      // 定位\n      for (let i = 0; i < addFiles.length; i++) {\n        let file = addFiles[i]\n        this.maps[file.id] = file\n      }\n\n      // 事件\n      this.emitInput()\n      for (let i = 0; i < addFiles.length; i++) {\n        this.emitFile(addFiles[i], undefined)\n      }\n\n      return isArray ? addFiles : addFiles[0]\n    },\n\n\n\n    // 添加表单文件\n    addInputFile(el) {\n      let files = []\n      if (el.files) {\n        for (let i = 0; i < el.files.length; i++) {\n          let file = el.files[i]\n          files.push({\n            size: file.size,\n            name: file.webkitRelativePath || file.relativePath || file.name,\n            type: file.type,\n            file,\n            el\n          })\n        }\n      } else {\n        files.push({\n          name: el.value.replace(/^.*?([^\\/\\\\\\r\\n]+)$/, '$1'),\n          el,\n        })\n      }\n      return this.add(files)\n    },\n\n\n    // 添加 DataTransfer\n    addDataTransfer(dataTransfer) {\n      let files = []\n      if (dataTransfer.items && dataTransfer.items.length) {\n        let items = []\n        for (let i = 0; i < dataTransfer.items.length; i++) {\n          let item = dataTransfer.items[i]\n          if (item.getAsEntry) {\n            item = item.getAsEntry() || item.getAsFile()\n          } else if (item.webkitGetAsEntry) {\n            item = item.webkitGetAsEntry() || item.getAsFile()\n          } else {\n            item = item.getAsFile()\n          }\n          if (item) {\n            items.push(item)\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          let forEach = (i) => {\n            let item = items[i]\n            // 结束 文件数量大于 最大数量\n            if (!item || (this.maximum > 0 && files.length >= this.maximum)) {\n              return resolve(this.add(files))\n            }\n            this.getEntry(item).then(function (results) {\n              files.push(...results)\n              forEach(i + 1)\n            })\n          }\n          forEach(0)\n        })\n      }\n\n      if (dataTransfer.files.length) {\n        for (let i = 0; i < dataTransfer.files.length; i++) {\n          files.push(dataTransfer.files[i])\n          if (this.maximum > 0 && files.length >= this.maximum) {\n            break\n          }\n        }\n        return Promise.resolve(this.add(files))\n      }\n\n      return Promise.resolve([])\n    },\n\n\n    // 获得 entry\n    getEntry(entry, path = '') {\n      return new Promise((resolve, reject) => {\n        if (entry.isFile) {\n          entry.file(function (file) {\n            resolve([\n              {\n                size: file.size,\n                name: path + file.name,\n                type: file.type,\n                file,\n              }\n            ])\n          })\n        } else if (entry.isDirectory && this.dropDirectory) {\n          let files = []\n          let dirReader = entry.createReader()\n          let readEntries = () => {\n            dirReader.readEntries((entries) => {\n              let forEach = (i) => {\n                if ((!entries[i] && i === 0) || (this.maximum > 0 && files.length >= this.maximum)) {\n                  return resolve(files)\n                }\n                if (!entries[i]) {\n                  return readEntries()\n                }\n                this.getEntry(entries[i], path + entry.name + '/').then((results) => {\n                  files.push(...results)\n                  forEach(i + 1)\n                })\n              }\n              forEach(0)\n            })\n          }\n          readEntries()\n        } else {\n          resolve([])\n        }\n      })\n    },\n\n\n    replace(id1, id2) {\n      let file1 = this.get(id1)\n      let file2 = this.get(id2)\n      if (!file1 || !file2 || file1 === file2) {\n        return false\n      }\n      let files = this.files.concat([])\n      let index1 = files.indexOf(file1)\n      let index2 = files.indexOf(file2)\n      if (index1 === -1 || index2 === -1) {\n        return false\n      }\n      files[index1] = file2\n      files[index2] = file1\n      this.files = files\n      this.emitInput()\n      return true\n    },\n\n    // 移除\n    remove(id) {\n      let file = this.get(id)\n      if (file) {\n        if (this.emitFilter(undefined, file)) {\n          return false\n        }\n        let files = this.files.concat([])\n        let index = files.indexOf(file)\n        if (index === -1) {\n          console.error('remove', file)\n          return false\n        }\n        files.splice(index, 1)\n        this.files = files\n\n        // 定位\n        delete this.maps[file.id]\n\n        // 事件\n        this.emitInput()\n        this.emitFile(undefined, file)\n      }\n      return file\n    },\n\n    // 更新\n    update(id, data) {\n      let file = this.get(id)\n      if (file) {\n        let newFile = {\n          ...file,\n          ...data\n        }\n        // 停用必须加上错误\n        if (file.fileObject && file.active && !newFile.active && !newFile.error && !newFile.success) {\n          newFile.error = 'abort'\n        }\n\n        if (this.emitFilter(newFile, file)) {\n          return false\n        }\n\n        let files = this.files.concat([])\n        let index = files.indexOf(file)\n        if (index === -1) {\n          console.error('update', file)\n          return false\n        }\n        files.splice(index, 1, newFile)\n        this.files = files\n\n        // 删除  旧定位 写入 新定位 （已便支持修改id)\n        delete this.maps[file.id]\n        this.maps[newFile.id] = newFile\n\n        // 事件\n        this.emitInput()\n        this.emitFile(newFile, file)\n        return newFile\n      }\n      return false\n    },\n\n\n\n    // 预处理 事件 过滤器\n    emitFilter(newFile, oldFile) {\n      let isPrevent = false\n      this.$emit('input-filter', newFile, oldFile, function () {\n        isPrevent = true\n        return isPrevent\n      })\n      return isPrevent\n    },\n\n    // 处理后 事件 分发\n    emitFile(newFile, oldFile) {\n      this.$emit('input-file', newFile, oldFile)\n      if (newFile && newFile.fileObject && newFile.active && (!oldFile || !oldFile.active)) {\n        this.uploading++\n        // 激活\n        this.$nextTick(function () {\n          setTimeout(() => {\n            this.upload(newFile).then(() => {\n              // eslint-disable-next-line\n              newFile = this.get(newFile)\n              if (newFile && newFile.fileObject) {\n                this.update(newFile, {\n                  active: false,\n                  success: !newFile.error\n                })\n              }\n            }).catch((e) => {\n              this.update(newFile, {\n                active: false,\n                success: false,\n                error: e.code || e.error || e.message || e\n              })\n            })\n          }, parseInt(Math.random() * 50 + 50, 10))\n        })\n      } else if ((!newFile || !newFile.fileObject || !newFile.active) && oldFile && oldFile.fileObject && oldFile.active) {\n        // 停止\n        this.uploading--\n      }\n\n      // 自动延续激活\n      if (this.active && (Boolean(newFile) !== Boolean(oldFile) || newFile.active !== oldFile.active)) {\n        this.watchActive(true)\n      }\n    },\n\n    emitInput() {\n      this.$emit('input', this.files)\n    },\n\n\n    // 上传\n    upload(id) {\n      let file = this.get(id)\n\n      // 被删除\n      if (!file) {\n        return Promise.reject('not_exists')\n      }\n\n      // 不是文件对象\n      if (!file.fileObject) {\n        return Promise.reject('file_object')\n      }\n\n      // 有错误直接响应\n      if (file.error) {\n        return Promise.reject(file.error)\n      }\n\n      // 已完成直接响应\n      if (file.success) {\n        return Promise.resolve(file)\n      }\n\n      // 后缀\n      let extensions = this.extensions\n      if (extensions && (extensions.length || typeof extensions.length === 'undefined')) {\n        if (typeof extensions !== 'object' || !(extensions instanceof RegExp)) {\n          if (typeof extensions === 'string') {\n            extensions = extensions.split(',').map(value => value.trim()).filter(value => value)\n          }\n          extensions = new RegExp('\\\\.(' + extensions.join('|').replace(/\\./g, '\\\\.') + ')$', 'i')\n        }\n        if (file.name.search(extensions) === -1) {\n          return Promise.reject('extension')\n        }\n      }\n\n      // 大小\n      if (this.size > 0 && file.size >= 0 && file.size > this.size) {\n        return Promise.reject('size')\n      }\n\n      if (this.features.html5) {\n        if (this.shouldUseChunkUpload(file)) {\n          return this.uploadChunk(file)\n        }\n        if (file.putAction) {\n          return this.uploadPut(file)\n        }\n\n        return this.uploadHtml5(file)\n      }\n\n      return this.uploadHtml4(file)\n    },\n\n    /**\n     * Whether this file should be uploaded using chunk upload or not\n     *\n     * @param Object file\n     */\n    shouldUseChunkUpload (file) {\n      return this.chunkEnabled &&\n        !!this.chunkOptions.handler &&\n        file.size > this.chunkOptions.minSize\n    },\n\n    /**\n     * Upload a file using Chunk method\n     *\n     * @param File file\n     */\n    uploadChunk (file) {\n      const HandlerClass = this.chunkOptions.handler\n      file.chunk = new HandlerClass(file, this.chunkOptions)\n\n      return file.chunk.upload()\n    },\n\n    uploadPut(file) {\n      let querys = []\n      let value\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value !== null && value !== undefined) {\n          querys.push(encodeURIComponent(key) + '=' + encodeURIComponent(value))\n        }\n      }\n      let queryString = querys.length ? (file.putAction.indexOf('?') === -1 ? '?' : '&') + querys.join('&') : ''\n      let xhr = new XMLHttpRequest()\n      xhr.open('PUT', file.putAction + queryString)\n      return this.uploadXhr(xhr, file, file.file)\n    },\n\n    uploadHtml5(file) {\n      let form = new window.FormData()\n      let value\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          if (value instanceof File) {\n            form.append(key, value, value.name)\n          } else {\n            form.append(key, JSON.stringify(value))\n          }\n        } else if (value !== null && value !== undefined) {\n          form.append(key, value)\n        }\n      }\n      form.append(this.name, file.file, file.file.filename || file.name)\n      let xhr = new XMLHttpRequest()\n      xhr.open('POST', file.postAction)\n      return this.uploadXhr(xhr, file, form)\n    },\n\n    uploadXhr(xhr, _file, body) {\n      let file = _file\n      let speedTime = 0\n      let speedLoaded = 0\n\n      // 进度条\n      xhr.upload.onprogress = (e) => {\n        // 还未开始上传 已删除 未激活\n        file = this.get(file)\n        if (!e.lengthComputable || !file || !file.fileObject || !file.active) {\n          return\n        }\n\n        // 进度 速度 每秒更新一次\n        let speedTime2 = Math.round(Date.now() / 1000)\n        if (speedTime2 === speedTime) {\n          return\n        }\n        speedTime = speedTime2\n\n        file = this.update(file, {\n          progress: (e.loaded / e.total * 100).toFixed(2),\n          speed: e.loaded - speedLoaded,\n        })\n        speedLoaded = e.loaded\n      }\n\n      // 检查激活状态\n      let interval = setInterval(() => {\n        file = this.get(file)\n        if (file && file.fileObject && !file.success && !file.error && file.active) {\n          return\n        }\n\n        if (interval) {\n          clearInterval(interval)\n          interval = false\n        }\n\n        try {\n          xhr.abort()\n          xhr.timeout = 1\n        } catch (e) {\n        }\n      }, 100)\n\n      return new Promise((resolve, reject) => {\n        let complete\n        let fn = (e) => {\n          // 已经处理过了\n          if (complete) {\n            return\n          }\n          complete = true\n          if (interval) {\n            clearInterval(interval)\n            interval = false\n          }\n\n          file = this.get(file)\n\n          // 不存在直接响应\n          if (!file) {\n            return reject('not_exists')\n          }\n\n          // 不是文件对象\n          if (!file.fileObject) {\n            return reject('file_object')\n          }\n\n          // 有错误自动响应\n          if (file.error) {\n            return reject(file.error)\n          }\n\n          // 未激活\n          if (!file.active) {\n            return reject('abort')\n          }\n\n\n          // 已完成 直接相应\n          if (file.success) {\n            return resolve(file)\n          }\n\n          let data = {}\n\n          switch (e.type) {\n            case 'timeout':\n            case 'abort':\n              data.error = e.type\n              break\n            case 'error':\n              if (!xhr.status) {\n                data.error = 'network'\n              } else if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              }\n              break\n            default:\n              if (xhr.status >= 500) {\n                data.error = 'server'\n              } else if (xhr.status >= 400) {\n                data.error = 'denied'\n              } else {\n                data.progress = '100.00'\n              }\n          }\n\n          if (xhr.responseText) {\n            let contentType = xhr.getResponseHeader('Content-Type')\n            if (contentType && contentType.indexOf('/json') !== -1) {\n              data.response = JSON.parse(xhr.responseText)\n            } else {\n              data.response = xhr.responseText\n            }\n          }\n\n          // 更新\n          file = this.update(file, data)\n\n          // 相应错误\n          if (file.error) {\n            return reject(file.error)\n          }\n\n          // 响应\n          return resolve(file)\n        }\n\n        // 事件\n        xhr.onload = fn\n        xhr.onerror = fn\n        xhr.onabort = fn\n        xhr.ontimeout = fn\n\n        // 超时\n        if (file.timeout) {\n          xhr.timeout = file.timeout\n        }\n\n        // headers\n        for (let key in file.headers) {\n          xhr.setRequestHeader(key, file.headers[key])\n        }\n\n        // 更新 xhr\n        file = this.update(file, { xhr })\n\n        // 开始上传\n        xhr.send(body)\n      })\n    },\n\n\n\n\n    uploadHtml4(_file) {\n      let file = _file\n      let onKeydown = function (e) {\n        if (e.keyCode === 27) {\n          e.preventDefault()\n        }\n      }\n\n      let iframe = document.createElement('iframe')\n      iframe.id = 'upload-iframe-' + file.id\n      iframe.name = 'upload-iframe-' + file.id\n      iframe.src = 'about:blank'\n      iframe.setAttribute('style', 'width:1px;height:1px;top:-999em;position:absolute; margin-top:-999em;')\n\n\n      let form = document.createElement('form')\n\n      form.action = file.postAction\n\n      form.name = 'upload-form-' + file.id\n\n\n      form.setAttribute('method', 'POST')\n      form.setAttribute('target', 'upload-iframe-' + file.id)\n      form.setAttribute('enctype', 'multipart/form-data')\n\n      let value\n      let input\n      for (let key in file.data) {\n        value = file.data[key]\n        if (value && typeof value === 'object' && typeof value.toString !== 'function') {\n          value = JSON.stringify(value)\n        }\n        if (value !== null && value !== undefined) {\n          input = document.createElement('input')\n          input.type = 'hidden'\n          input.name = key\n          input.value = value\n          form.appendChild(input)\n        }\n      }\n      form.appendChild(file.el)\n\n      document.body.appendChild(iframe).appendChild(form)\n\n\n\n\n      let getResponseData = function () {\n        let doc\n        try {\n          if (iframe.contentWindow) {\n            doc = iframe.contentWindow.document\n          }\n        } catch (err) {\n        }\n        if (!doc) {\n          try {\n            doc = iframe.contentDocument ? iframe.contentDocument : iframe.document\n          } catch (err) {\n            doc = iframe.document\n          }\n        }\n        if (doc && doc.body) {\n          return doc.body.innerHTML\n        }\n        return null\n      }\n\n\n      return new Promise((resolve, reject) => {\n        setTimeout(() => {\n          file = this.update(file, { iframe })\n\n          // 不存在\n          if (!file) {\n            return reject('not_exists')\n          }\n\n          // 定时检查\n          let interval = setInterval(() => {\n            file = this.get(file)\n            if (file && file.fileObject && !file.success && !file.error && file.active) {\n              return\n            }\n\n            if (interval) {\n              clearInterval(interval)\n              interval = false\n            }\n\n            iframe.onabort({ type: file ? 'abort' : 'not_exists' })\n          }, 100)\n\n\n          let complete\n          let fn = (e) => {\n            // 已经处理过了\n            if (complete) {\n              return\n            }\n            complete = true\n\n\n            if (interval) {\n              clearInterval(interval)\n              interval = false\n            }\n\n            // 关闭 esc 事件\n            document.body.removeEventListener('keydown', onKeydown)\n\n            file = this.get(file)\n\n            // 不存在直接响应\n            if (!file) {\n              return reject('not_exists')\n            }\n\n            // 不是文件对象\n            if (!file.fileObject) {\n              return reject('file_object')\n            }\n\n            // 有错误自动响应\n            if (file.error) {\n              return reject(file.error)\n            }\n\n            // 未激活\n            if (!file.active) {\n              return reject('abort')\n            }\n\n            // 已完成 直接相应\n            if (file.success) {\n              return resolve(file)\n            }\n\n            let response = getResponseData()\n            let data = {}\n            switch (e.type) {\n              case 'abort':\n                data.error = 'abort'\n                break\n              case 'error':\n                if (file.error) {\n                  data.error = file.error\n                } else if (response === null) {\n                  data.error = 'network'\n                } else {\n                  data.error = 'denied'\n                }\n                break\n              default:\n                if (file.error) {\n                  data.error = file.error\n                } else if (data === null) {\n                  data.error = 'network'\n                } else {\n                  data.progress = '100.00'\n                }\n            }\n\n            if (response !== null) {\n              if (response && response.substr(0, 1) === '{' && response.substr(response.length - 1, 1) === '}') {\n                try {\n                  response = JSON.parse(response)\n                } catch (err) {\n                }\n              }\n              data.response = response\n            }\n\n            // 更新\n            file = this.update(file, data)\n\n            if (file.error) {\n              return reject(file.error)\n            }\n\n            // 响应\n            return resolve(file)\n          }\n\n\n          // 添加事件\n          iframe.onload = fn\n          iframe.onerror = fn\n          iframe.onabort = fn\n\n\n          // 禁止 esc 键\n          document.body.addEventListener('keydown', onKeydown)\n\n          // 提交\n          form.submit()\n        }, 50)\n      }).then(function (res) {\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\n        return res\n      }).catch(function (res) {\n        iframe.parentNode && iframe.parentNode.removeChild(iframe)\n        return res\n      })\n    },\n\n\n\n    watchActive(active) {\n      let file\n      let index = 0\n      while ((file = this.files[index])) {\n        index++\n        if (!file.fileObject) {\n          // 不是文件对象\n        } else if (active && !this.destroy) {\n          if (this.uploading >= this.thread || (this.uploading && !this.features.html5)) {\n            break\n          }\n          if (!file.active && !file.error && !file.success) {\n            this.update(file, { active: true })\n          }\n        } else {\n          if (file.active) {\n            this.update(file, { active: false })\n          }\n        }\n      }\n      if (this.uploading === 0) {\n        this.active = false\n      }\n    },\n\n\n    watchDrop(_el) {\n      let el = _el\n      if (!this.features.drop) {\n        return\n      }\n\n      // 移除挂载\n      if (this.dropElement) {\n        try {\n          document.removeEventListener('dragenter', this.onDragenter, false)\n          document.removeEventListener('dragleave', this.onDragleave, false)\n          document.removeEventListener('drop', this.onDocumentDrop, false)\n          this.dropElement.removeEventListener('dragover', this.onDragover, false)\n          this.dropElement.removeEventListener('drop', this.onDrop, false)\n        } catch (e) {\n        }\n      }\n\n      if (!el) {\n        el = false\n      } else if (typeof el === 'string') {\n        el = document.querySelector(el) || this.$root.$el.querySelector(el)\n      } else if (el === true) {\n        el = this.$parent.$el\n      }\n\n      this.dropElement = el\n\n      if (this.dropElement) {\n        document.addEventListener('dragenter', this.onDragenter, false)\n        document.addEventListener('dragleave', this.onDragleave, false)\n        document.addEventListener('drop', this.onDocumentDrop, false)\n        this.dropElement.addEventListener('dragover', this.onDragover, false)\n        this.dropElement.addEventListener('drop', this.onDrop, false)\n      }\n    },\n\n\n    onDragenter(e) {\n      e.preventDefault()\n      if (!this.dropActive) {\n        this.dropActive = true\n      }\n    },\n\n    onDragleave(e) {\n      e.preventDefault()\n      if (e.target.nodeName === 'HTML' || (e.screenX === 0 && e.screenY === 0 && !e.fromElement && e.offsetX <= 0)) {\n        this.dropActive = false\n      }\n    },\n\n    onDragover(e) {\n      e.preventDefault()\n    },\n\n    onDocumentDrop() {\n      this.dropActive = false\n    },\n\n    onDrop(e) {\n      e.preventDefault()\n      this.addDataTransfer(e.dataTransfer)\n    },\n  }\n}\n</script>\n","module.exports = require('./FileUpload.vue')\n"],"names":["createRequest","options","xhr","XMLHttpRequest","responseType","open","method","url","headers","keys","forEach","setRequestHeader","key","sendRequest","body","Promise","resolve","reject","onload","status","response","statusText","onerror","send","JSON","stringify","ChunkUploadHandler","file","chunks","start","end","chunkSize","fileSize","push","slice","maxRetries","progress","active","chunksUploading","abort","startChunking","promise","action","Object","assign","startBody","fileType","then","res","message","sessionId","data","session_id","end_offset","createChunks","catch","error","i","maxActiveChunks","uploadNextChunk","hasChunksToUpload","uploadChunk","chunksToUpload","length","finish","chunk","updateFileProgress","upload","addEventListener","evt","lengthComputable","Math","round","loaded","total","uploadBody","startOffset","blob","uploaded","retries","pause","finishBody","parseInt","maxActive","type","size","completedProgress","chunksUploaded","uploadingProgress","reduce","min","filter","render","e","$destroy","$parent","addInputFile","target","constructor","$el","CHUNK_DEFAULT_OPTIONS","ChunkUploadDefaultHandler","String","Boolean","Number","multiple","Array","value","input","document","createElement","window","FormData","files","webkitdirectory","directory","features","html5","ondrop","drop","maps","$nextTick","$forceUpdate","watchDrop","destroy","fileObject","success","undefined","watchActive","oldMaps","id","newFile","oldFile","emitFile","emitInput","_files","index","addIndex","isArray","addFiles","Blob","webkitRelativePath","relativePath","name","Element","el","putAction","postAction","timeout","random","toString","substr","emitFilter","maximum","clear","newFiles","concat","splice","replace","add","dataTransfer","items","item","getAsEntry","getAsFile","webkitGetAsEntry","getEntry","results","entry","path","isFile","isDirectory","dropDirectory","dirReader","createReader","readEntries","entries","id1","id2","file1","get","file2","index1","indexOf","index2","isPrevent","$emit","uploading","update","code","extensions","RegExp","split","map","trim","join","search","shouldUseChunkUpload","uploadPut","uploadHtml5","uploadHtml4","chunkEnabled","chunkOptions","handler","minSize","HandlerClass","querys","encodeURIComponent","queryString","uploadXhr","form","File","append","filename","_file","speedTime","speedLoaded","onprogress","speedTime2","Date","now","toFixed","interval","setInterval","complete","fn","responseText","contentType","getResponseHeader","parse","onabort","ontimeout","onKeydown","keyCode","preventDefault","iframe","src","setAttribute","appendChild","getResponseData","doc","contentWindow","err","contentDocument","innerHTML","removeEventListener","submit","parentNode","removeChild","thread","_el","dropElement","onDragenter","onDragleave","onDocumentDrop","onDragover","onDrop","querySelector","$root","dropActive","nodeName","screenX","screenY","fromElement","offsetX","addDataTransfer","require$$0"],"mappings":"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"}